{
  "name": "Recommendation System",
  "nodes": [
    {
      "parameters": {},
      "id": "f2881932-0c63-462d-be73-7506d4eb552e",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        304,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "xire29",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_RS",
          "mode": "list",
          "cachedResultName": "n8n_RS",
          "cachedResultUrl": "https://github.com/xire29/n8n_RS"
        },
        "filePath": "imdb_top_1000.csv",
        "additionalParameters": {}
      },
      "id": "41154a21-80ff-412a-9a1a-0f01b0aec659",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        528,
        32
      ],
      "typeVersion": 1,
      "webhookId": "c8bcd895-8ed2-4f41-a166-b4a109c2cd28",
      "credentials": {
        "githubApi": {
          "id": "qgCcPBLihGNBH7wx",
          "name": "GitHub account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3d5d80cd-2b73-4e1a-8334-3a95af82c0d7",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        688,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('Extract from File').item.json.Description }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "movie_name",
                "value": "={{ $('Extract from File').item.json['Movie Name'] }}"
              },
              {
                "name": "movie_release_date",
                "value": "={{ $('Extract from File').item.json['Year of Release'] }}"
              },
              {
                "name": "movie_description",
                "value": "={{ $('Extract from File').item.json.Description }}"
              }
            ]
          }
        }
      },
      "id": "d09964a5-d730-4716-803c-3d336227a2d6",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1024,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "42050e18-40b6-47f1-b44b-196f6a7a535d",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        1024,
        432
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "imdb"
        },
        "options": {}
      },
      "id": "7e92320b-a063-4f24-9998-6f3b94af13eb",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        928,
        32
      ],
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "hT1aPr0QOwkIEnB1",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body['session-id'] }}"
      },
      "id": "34f91464-ea5f-437e-93b0-c73c040e1de7",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        544,
        768
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "87a99d01-0da9-45ac-9821-30c07a79822b",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        960,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "6742bda6-e249-41ce-97b0-e22fd06fa6f7",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1872,
        784
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "fieldToSplitOut": "result",
        "options": {}
      },
      "id": "a5c09903-c4d6-40fb-ac1f-29a7e6b4cb2e",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2592,
        768
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "result.points",
        "options": {}
      },
      "id": "34ed3f17-955b-4d46-9782-44ca07ed3521",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2464,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "options": {}
      },
      "id": "2bf8e99a-93fc-4ed8-b9f4-2738b26c33ba",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        2848,
        688
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "options": {}
      },
      "id": "cca12fd0-b2ca-4f75-a995-fd1e99060b7b",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        3280,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body }}",
        "options": {
          "systemMessage": "You are a Movie Recommender Tool using a Vector Database under the hood. Provide top-3 movie recommendations returned by the database, ordered by their recommendation score, but not showing the score to the user."
        }
      },
      "id": "6ef55e39-aaa0-42c8-b439-e8986d0943fe",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        480,
        448
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/text-embedding-004:embedContent",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "AIzaSyAxeXVOMbep87q0aVkX4xziwSQvFxO9xCc"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"models/text-embedding-004\",\n  \"content\": {\n    \"parts\": [\n      {\n        \"text\": \"{{ $json.query.negative_example }}\"\n      }\n    ]\n  }\n} ",
        "options": {}
      },
      "id": "a7882daa-5532-44b3-bb9e-2ffae07e205b",
      "name": "Embedding Anti-Recommendation Request with Open AI",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1248,
        944
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a28c9d-aeb1-48bb-8a73-f8bddbd73460",
              "name": "positive_example",
              "type": "array",
              "value": "={{ $json.embedding.values }}"
            }
          ]
        },
        "options": {}
      },
      "id": "74acd3a0-8746-4335-b31a-727655f53373",
      "name": "Extracting Embedding",
      "type": "n8n-nodes-base.set",
      "position": [
        1504,
        752
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01a28c9d-aeb1-48bb-8a73-f8bddbd73460",
              "name": "negative_example",
              "type": "array",
              "value": "={{ $json.embedding.values }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3caa229a-e3f0-4600-98dd-ed5cdce3392e",
      "name": "Extracting Embedding1",
      "type": "n8n-nodes-base.set",
      "position": [
        1504,
        944
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://4ab6f44b-6e0f-4d0e-b6a4-7d538e8d168b.eu-west-2-0.aws.cloud.qdrant.io:6333/collections/imdb_1000_gemini/points/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}",
        "options": {}
      },
      "id": "317c40f2-8a30-45a6-a963-468d918e0a96",
      "name": "Calling Qdrant Recommendation API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2160,
        784
      ],
      "typeVersion": 4.2,
      "credentials": {
        "qdrantApi": {
          "id": "hT1aPr0QOwkIEnB1",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://4ab6f44b-6e0f-4d0e-b6a4-7d538e8d168b.eu-west-2-0.aws.cloud.qdrant.io:6333/collections/imdb_1000_gemini/points",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}",
        "options": {}
      },
      "id": "d7f5ad24-465c-460f-8f4b-3ad226c49757",
      "name": "Retrieving Recommended Movies Meta Data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2384,
        752
      ],
      "typeVersion": 4.2,
      "credentials": {
        "qdrantApi": {
          "id": "hT1aPr0QOwkIEnB1",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6",
              "name": "movie_recommendation_score",
              "type": "number",
              "value": "={{ $json.score }}"
            },
            {
              "id": "c9f0982e-bd4e-484b-9eab-7e69e333f706",
              "name": "movie_description",
              "type": "string",
              "value": "={{ $json.payload.content }}"
            },
            {
              "id": "7c7baf11-89cd-4695-9f37-13eca7e01163",
              "name": "movie_name",
              "type": "string",
              "value": "={{ $json.payload.metadata.movie_name }}"
            },
            {
              "id": "1d1d269e-43c7-47b0-859b-268adf2dbc21",
              "name": "movie_release_year",
              "type": "string",
              "value": "={{ $json.payload.metadata.movie_release_date }}"
            }
          ]
        },
        "options": {}
      },
      "id": "31f1e74b-aee1-4d39-9339-9a483b078cee",
      "name": "Selecting Fields Relevant for Agent",
      "type": "n8n-nodes-base.set",
      "position": [
        3072,
        688
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        848,
        320
      ],
      "id": "d6124544-f1af-46df-9c12-f72355a38539",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "aoYLOURQJHh5doOW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        304,
        768
      ],
      "id": "417fb9e2-0d47-420d-b7f7-5a8d1ff34aa4",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "aoYLOURQJHh5doOW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/text-embedding-004:embedContent",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "AIzaSyAxeXVOMbep87q0aVkX4xziwSQvFxO9xCc"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"models/text-embedding-004\",\n  \"content\": {\n    \"parts\": [\n      {\n        \"text\": \"{{ $json.query.positive_example }}\"\n      }\n    ]\n  }\n} ",
        "options": {}
      },
      "id": "bf61748c-a6e7-4585-bbe6-34a22d079747",
      "name": "Embedding Recommendation Request with Gemini",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1152,
        608
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "name": "movie_recommender",
        "description": "Call this tool to get a list of recommended movies from a vector database. ",
        "workflowId": {
          "__rl": true,
          "value": "SfJbUPDPtIdQ2y7D",
          "mode": "list",
          "cachedResultName": "Recommendation System"
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"positive_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's positive recommendation request\"\n    },\n    \"negative_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's negative anti-recommendation reuqest\"\n    }\n}\n}"
      },
      "id": "ae606d4f-d93c-424c-b3ad-bbf3894a29e4",
      "name": "Call 'Recommendation System'",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        720,
        704
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -80,
        464
      ],
      "id": "7df33109-8b2a-4c9a-ad78-29fea459380f",
      "name": "Webhook",
      "webhookId": "d720d5c1-ef5d-494a-a4a5-992d2c95ba45"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ae183c1-f4f6-49c6-bc26-3fdd4f322046",
              "name": "body",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "ce01154f-4e68-48c7-bcb2-d1ab4b7dc2ed",
              "name": "session-id",
              "value": "={{ $json.body['session-id'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        128,
        464
      ],
      "id": "5ab9e3fe-3765-4198-8e83-2e813ffb5dde",
      "name": "Edit Fields"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": {
            "negative_example": "horror bloody movie",
            "positive_example": "romantic comedy"
          }
        }
      }
    ]
  },
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Calling Qdrant Recommendation API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Selecting Fields Relevant for Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Extracting Embedding": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Extracting Embedding1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Embedding Recommendation Request with Gemini",
            "type": "main",
            "index": 0
          },
          {
            "node": "Embedding Anti-Recommendation Request with Open AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calling Qdrant Recommendation API": {
      "main": [
        [
          {
            "node": "Retrieving Recommended Movies Meta Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selecting Fields Relevant for Agent": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieving Recommended Movies Meta Data": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embedding Anti-Recommendation Request with Open AI": {
      "main": [
        [
          {
            "node": "Extracting Embedding1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embedding Recommendation Request with Gemini": {
      "main": [
        [
          {
            "node": "Extracting Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'Recommendation System'": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8fe10b21-6a87-4ec2-96ff-0107202cb997",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7d7030c12a865217c079f8ee864c580e4fcaf27d524e40675ccd637511165579"
  },
  "id": "SfJbUPDPtIdQ2y7D",
  "tags": []
}